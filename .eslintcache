[{"/Users/apple/Desktop/react/Todo List/react-list/src/index.js":"1","/Users/apple/Desktop/react/Todo List/react-list/src/App.js":"2","/Users/apple/Desktop/react/Todo List/react-list/src/reportWebVitals.js":"3","/Users/apple/Desktop/react/Todo List/react-list/src/context.js":"4","/Users/apple/Desktop/react/Todo List/react-list/src/Todo/TodoList/TodoList.js":"5","/Users/apple/Desktop/react/Todo List/react-list/src/Todo/AddTodo/AddTodo.js":"6","/Users/apple/Desktop/react/Todo List/react-list/src/Todo/TodoItem/TodoItem.js":"7"},{"size":500,"mtime":1612299216534,"results":"8","hashOfConfig":"9"},{"size":1349,"mtime":1612449286693,"results":"10","hashOfConfig":"9"},{"size":362,"mtime":1612299216535,"results":"11","hashOfConfig":"9"},{"size":91,"mtime":1612443515195,"results":"12","hashOfConfig":"9"},{"size":556,"mtime":1612446769437,"results":"13","hashOfConfig":"9"},{"size":705,"mtime":1612443450589,"results":"14","hashOfConfig":"9"},{"size":2184,"mtime":1612446478690,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"1u4xu72",{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"18"},"/Users/apple/Desktop/react/Todo List/react-list/src/index.js",[],["32","33"],"/Users/apple/Desktop/react/Todo List/react-list/src/App.js",[],"/Users/apple/Desktop/react/Todo List/react-list/src/reportWebVitals.js",[],"/Users/apple/Desktop/react/Todo List/react-list/src/context.js",[],"/Users/apple/Desktop/react/Todo List/react-list/src/Todo/TodoList/TodoList.js",[],"/Users/apple/Desktop/react/Todo List/react-list/src/Todo/AddTodo/AddTodo.js",[],"/Users/apple/Desktop/react/Todo List/react-list/src/Todo/TodoItem/TodoItem.js",["34"],"import React, { useContext } from 'react'\nimport { useState } from 'react'\nimport './TodoItem.css'\nimport Context from '../../context'\n\n\n\nfunction TodoItem({ todo, index, onChange, saveChanges}) {\n    \n    const { removeTodo } = useContext(Context)\n    const [input, setInput] = useState(todo.title)\n\n    const [textChangeIsVisibile, setTextChangeIsVisibile] = useState(false)\n    const [titleIsVisibile, setTitleIsVisibile] = useState(true)\n\n    const classes = []\n    if (todo.completed) {\n        classes.push('done')\n    }\n\n    const titleHandler = title => {\n        setInput(title.target.value)\n    }\n\n    const changeVisibility = () => {\n        setTextChangeIsVisibile(!textChangeIsVisibile)\n        setTitleIsVisibile(!titleIsVisibile)\n    }\n\n    const saveInfo = () => {\n        setTextChangeIsVisibile(!textChangeIsVisibile)\n        setTitleIsVisibile(!titleIsVisibile)\n        todo.title = input\n        \n    }\n\n \n    return (\n        <li className='todo_item'>\n        <div className='todo_index'>\n            {index + 1} \n        </div>\n        <div className='todo_checkbox'>    \n            <input \n                type='checkbox' \n                checked={todo.completed}\n                onChange={() => onChange(todo.id)}\n            />\n            </div>\n        <div className={classes.join(' ')} \n                style={{display: titleIsVisibile ? 'block' : 'none' }}>\n                <div className='todo_text'> {todo.title} </div>\n        </div>\n            \n           <div>\n            <input type='text' \n                className='title_change' \n                value={input} \n                onChange={titleHandler}\n                style={{display: textChangeIsVisibile ? 'block' : 'none' }}\n                  />\n            </div>\n        \n            <div className='buttons'>\n                <button className='save-btn' onClick={() => saveChanges(todo.id, input), saveInfo} > save</button>\n                <button className='edit_btn' onClick={changeVisibility}> edit</button>\n                <button className='delete_btn' onClick={() => removeTodo(todo.id)}> delete </button>\n            </div>\n        \n        </li>\n    )\n}\n\nexport default TodoItem",{"ruleId":"35","replacedBy":"36"},{"ruleId":"37","replacedBy":"38"},{"ruleId":"39","severity":1,"message":"40","line":65,"column":88,"nodeType":"41","messageId":"42","endLine":65,"endColumn":89},"no-native-reassign",["43"],"no-negated-in-lhs",["44"],"no-sequences","Unexpected use of comma operator.","SequenceExpression","unexpectedCommaExpression","no-global-assign","no-unsafe-negation"]